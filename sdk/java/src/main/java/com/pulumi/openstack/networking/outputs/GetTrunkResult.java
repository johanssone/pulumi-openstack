// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.networking.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.openstack.networking.outputs.GetTrunkSubPort;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTrunkResult {
    private final @Nullable Boolean adminStateUp;
    /**
     * @return The set of string tags applied on the trunk.
     * 
     */
    private final List<String> allTags;
    private final @Nullable String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable String name;
    /**
     * @return The ID of the trunk subport.
     * 
     */
    private final @Nullable String portId;
    private final String projectId;
    private final String region;
    private final @Nullable String status;
    /**
     * @return The set of the trunk subports. The structure of each subport is
     * described below.
     * 
     */
    private final List<GetTrunkSubPort> subPorts;
    private final @Nullable List<String> tags;
    private final @Nullable String trunkId;

    @CustomType.Constructor
    private GetTrunkResult(
        @CustomType.Parameter("adminStateUp") @Nullable Boolean adminStateUp,
        @CustomType.Parameter("allTags") List<String> allTags,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("portId") @Nullable String portId,
        @CustomType.Parameter("projectId") String projectId,
        @CustomType.Parameter("region") String region,
        @CustomType.Parameter("status") @Nullable String status,
        @CustomType.Parameter("subPorts") List<GetTrunkSubPort> subPorts,
        @CustomType.Parameter("tags") @Nullable List<String> tags,
        @CustomType.Parameter("trunkId") @Nullable String trunkId) {
        this.adminStateUp = adminStateUp;
        this.allTags = allTags;
        this.description = description;
        this.id = id;
        this.name = name;
        this.portId = portId;
        this.projectId = projectId;
        this.region = region;
        this.status = status;
        this.subPorts = subPorts;
        this.tags = tags;
        this.trunkId = trunkId;
    }

    public Optional<Boolean> adminStateUp() {
        return Optional.ofNullable(this.adminStateUp);
    }
    /**
     * @return The set of string tags applied on the trunk.
     * 
     */
    public List<String> allTags() {
        return this.allTags;
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The ID of the trunk subport.
     * 
     */
    public Optional<String> portId() {
        return Optional.ofNullable(this.portId);
    }
    public String projectId() {
        return this.projectId;
    }
    public String region() {
        return this.region;
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The set of the trunk subports. The structure of each subport is
     * described below.
     * 
     */
    public List<GetTrunkSubPort> subPorts() {
        return this.subPorts;
    }
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public Optional<String> trunkId() {
        return Optional.ofNullable(this.trunkId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTrunkResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean adminStateUp;
        private List<String> allTags;
        private @Nullable String description;
        private String id;
        private @Nullable String name;
        private @Nullable String portId;
        private String projectId;
        private String region;
        private @Nullable String status;
        private List<GetTrunkSubPort> subPorts;
        private @Nullable List<String> tags;
        private @Nullable String trunkId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTrunkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminStateUp = defaults.adminStateUp;
    	      this.allTags = defaults.allTags;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.portId = defaults.portId;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.status = defaults.status;
    	      this.subPorts = defaults.subPorts;
    	      this.tags = defaults.tags;
    	      this.trunkId = defaults.trunkId;
        }

        public Builder adminStateUp(@Nullable Boolean adminStateUp) {
            this.adminStateUp = adminStateUp;
            return this;
        }
        public Builder allTags(List<String> allTags) {
            this.allTags = Objects.requireNonNull(allTags);
            return this;
        }
        public Builder allTags(String... allTags) {
            return allTags(List.of(allTags));
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder portId(@Nullable String portId) {
            this.portId = portId;
            return this;
        }
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public Builder subPorts(List<GetTrunkSubPort> subPorts) {
            this.subPorts = Objects.requireNonNull(subPorts);
            return this;
        }
        public Builder subPorts(GetTrunkSubPort... subPorts) {
            return subPorts(List.of(subPorts));
        }
        public Builder tags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public Builder trunkId(@Nullable String trunkId) {
            this.trunkId = trunkId;
            return this;
        }        public GetTrunkResult build() {
            return new GetTrunkResult(adminStateUp, allTags, description, id, name, portId, projectId, region, status, subPorts, tags, trunkId);
        }
    }
}
