// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.loadbalancer;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerArgs Empty = new LoadBalancerArgs();

    @Import(name="adminStateUp")
    private @Nullable Output<Boolean> adminStateUp;

    public Optional<Output<Boolean>> adminStateUp() {
        return Optional.ofNullable(this.adminStateUp);
    }

    @Import(name="availabilityZone")
    private @Nullable Output<String> availabilityZone;

    public Optional<Output<String>> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="flavorId")
    private @Nullable Output<String> flavorId;

    public Optional<Output<String>> flavorId() {
        return Optional.ofNullable(this.flavorId);
    }

    @Import(name="loadbalancerProvider")
    private @Nullable Output<String> loadbalancerProvider;

    public Optional<Output<String>> loadbalancerProvider() {
        return Optional.ofNullable(this.loadbalancerProvider);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    @Import(name="vipAddress")
    private @Nullable Output<String> vipAddress;

    public Optional<Output<String>> vipAddress() {
        return Optional.ofNullable(this.vipAddress);
    }

    @Import(name="vipNetworkId")
    private @Nullable Output<String> vipNetworkId;

    public Optional<Output<String>> vipNetworkId() {
        return Optional.ofNullable(this.vipNetworkId);
    }

    @Import(name="vipPortId")
    private @Nullable Output<String> vipPortId;

    public Optional<Output<String>> vipPortId() {
        return Optional.ofNullable(this.vipPortId);
    }

    @Import(name="vipSubnetId")
    private @Nullable Output<String> vipSubnetId;

    public Optional<Output<String>> vipSubnetId() {
        return Optional.ofNullable(this.vipSubnetId);
    }

    private LoadBalancerArgs() {}

    private LoadBalancerArgs(LoadBalancerArgs $) {
        this.adminStateUp = $.adminStateUp;
        this.availabilityZone = $.availabilityZone;
        this.description = $.description;
        this.flavorId = $.flavorId;
        this.loadbalancerProvider = $.loadbalancerProvider;
        this.name = $.name;
        this.region = $.region;
        this.securityGroupIds = $.securityGroupIds;
        this.tags = $.tags;
        this.tenantId = $.tenantId;
        this.vipAddress = $.vipAddress;
        this.vipNetworkId = $.vipNetworkId;
        this.vipPortId = $.vipPortId;
        this.vipSubnetId = $.vipSubnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerArgs $;

        public Builder() {
            $ = new LoadBalancerArgs();
        }

        public Builder(LoadBalancerArgs defaults) {
            $ = new LoadBalancerArgs(Objects.requireNonNull(defaults));
        }

        public Builder adminStateUp(@Nullable Output<Boolean> adminStateUp) {
            $.adminStateUp = adminStateUp;
            return this;
        }

        public Builder adminStateUp(Boolean adminStateUp) {
            return adminStateUp(Output.of(adminStateUp));
        }

        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder availabilityZone(String availabilityZone) {
            return availabilityZone(Output.of(availabilityZone));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder flavorId(@Nullable Output<String> flavorId) {
            $.flavorId = flavorId;
            return this;
        }

        public Builder flavorId(String flavorId) {
            return flavorId(Output.of(flavorId));
        }

        public Builder loadbalancerProvider(@Nullable Output<String> loadbalancerProvider) {
            $.loadbalancerProvider = loadbalancerProvider;
            return this;
        }

        public Builder loadbalancerProvider(String loadbalancerProvider) {
            return loadbalancerProvider(Output.of(loadbalancerProvider));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public Builder vipAddress(@Nullable Output<String> vipAddress) {
            $.vipAddress = vipAddress;
            return this;
        }

        public Builder vipAddress(String vipAddress) {
            return vipAddress(Output.of(vipAddress));
        }

        public Builder vipNetworkId(@Nullable Output<String> vipNetworkId) {
            $.vipNetworkId = vipNetworkId;
            return this;
        }

        public Builder vipNetworkId(String vipNetworkId) {
            return vipNetworkId(Output.of(vipNetworkId));
        }

        public Builder vipPortId(@Nullable Output<String> vipPortId) {
            $.vipPortId = vipPortId;
            return this;
        }

        public Builder vipPortId(String vipPortId) {
            return vipPortId(Output.of(vipPortId));
        }

        public Builder vipSubnetId(@Nullable Output<String> vipSubnetId) {
            $.vipSubnetId = vipSubnetId;
            return this;
        }

        public Builder vipSubnetId(String vipSubnetId) {
            return vipSubnetId(Output.of(vipSubnetId));
        }

        public LoadBalancerArgs build() {
            return $;
        }
    }

}
