// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetHypervisorV2Result {
    /**
     * @return The amount in GigaBytes of local storage the hypervisor can provide
     * 
     */
    private final Integer disk;
    /**
     * @return The IP address of the Hypervisor
     * 
     */
    private final String hostIp;
    /**
     * @return See Argument Reference above.
     * 
     */
    private final String hostname;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The number in MegaBytes of memory the hypervisor can provide
     * 
     */
    private final Integer memory;
    /**
     * @return The state of the hypervisor (`up` or `down`)
     * 
     */
    private final String state;
    /**
     * @return The status of the hypervisor (`enabled` or `disabled`)
     * 
     */
    private final String status;
    /**
     * @return The type of the hypervisor (example: `QEMU`)
     * 
     */
    private final String type;
    /**
     * @return The number of virtual CPUs the hypervisor can provide
     * 
     */
    private final Integer vcpus;

    @CustomType.Constructor
    private GetHypervisorV2Result(
        @CustomType.Parameter("disk") Integer disk,
        @CustomType.Parameter("hostIp") String hostIp,
        @CustomType.Parameter("hostname") String hostname,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("memory") Integer memory,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("vcpus") Integer vcpus) {
        this.disk = disk;
        this.hostIp = hostIp;
        this.hostname = hostname;
        this.id = id;
        this.memory = memory;
        this.state = state;
        this.status = status;
        this.type = type;
        this.vcpus = vcpus;
    }

    /**
     * @return The amount in GigaBytes of local storage the hypervisor can provide
     * 
     */
    public Integer disk() {
        return this.disk;
    }
    /**
     * @return The IP address of the Hypervisor
     * 
     */
    public String hostIp() {
        return this.hostIp;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The number in MegaBytes of memory the hypervisor can provide
     * 
     */
    public Integer memory() {
        return this.memory;
    }
    /**
     * @return The state of the hypervisor (`up` or `down`)
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The status of the hypervisor (`enabled` or `disabled`)
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The type of the hypervisor (example: `QEMU`)
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The number of virtual CPUs the hypervisor can provide
     * 
     */
    public Integer vcpus() {
        return this.vcpus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHypervisorV2Result defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer disk;
        private String hostIp;
        private String hostname;
        private String id;
        private Integer memory;
        private String state;
        private String status;
        private String type;
        private Integer vcpus;

        public Builder() {
    	      // Empty
        }

        public Builder(GetHypervisorV2Result defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disk = defaults.disk;
    	      this.hostIp = defaults.hostIp;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.memory = defaults.memory;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
    	      this.vcpus = defaults.vcpus;
        }

        public Builder disk(Integer disk) {
            this.disk = Objects.requireNonNull(disk);
            return this;
        }
        public Builder hostIp(String hostIp) {
            this.hostIp = Objects.requireNonNull(hostIp);
            return this;
        }
        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder memory(Integer memory) {
            this.memory = Objects.requireNonNull(memory);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder vcpus(Integer vcpus) {
            this.vcpus = Objects.requireNonNull(vcpus);
            return this;
        }        public GetHypervisorV2Result build() {
            return new GetHypervisorV2Result(disk, hostIp, hostname, id, memory, state, status, type, vcpus);
        }
    }
}
