// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.networking.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.openstack.networking.outputs.GetRouterExternalFixedIp;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRouterResult {
    private final @Nullable Boolean adminStateUp;
    /**
     * @return The set of string tags applied on the router.
     * 
     */
    private final List<String> allTags;
    /**
     * @return The availability zone that is used to make router resources highly available.
     * 
     */
    private final List<String> availabilityZoneHints;
    private final @Nullable String description;
    private final @Nullable Boolean distributed;
    /**
     * @return The value that points out if the Source NAT is enabled on the router.
     * 
     */
    private final Boolean enableSnat;
    /**
     * @return The external fixed IPs of the router.
     * 
     */
    private final List<GetRouterExternalFixedIp> externalFixedIps;
    /**
     * @return The network UUID of an external gateway for the router.
     * 
     */
    private final String externalNetworkId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable String name;
    private final @Nullable String region;
    private final @Nullable String routerId;
    private final @Nullable String status;
    private final @Nullable List<String> tags;
    private final @Nullable String tenantId;

    @CustomType.Constructor
    private GetRouterResult(
        @CustomType.Parameter("adminStateUp") @Nullable Boolean adminStateUp,
        @CustomType.Parameter("allTags") List<String> allTags,
        @CustomType.Parameter("availabilityZoneHints") List<String> availabilityZoneHints,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("distributed") @Nullable Boolean distributed,
        @CustomType.Parameter("enableSnat") Boolean enableSnat,
        @CustomType.Parameter("externalFixedIps") List<GetRouterExternalFixedIp> externalFixedIps,
        @CustomType.Parameter("externalNetworkId") String externalNetworkId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("region") @Nullable String region,
        @CustomType.Parameter("routerId") @Nullable String routerId,
        @CustomType.Parameter("status") @Nullable String status,
        @CustomType.Parameter("tags") @Nullable List<String> tags,
        @CustomType.Parameter("tenantId") @Nullable String tenantId) {
        this.adminStateUp = adminStateUp;
        this.allTags = allTags;
        this.availabilityZoneHints = availabilityZoneHints;
        this.description = description;
        this.distributed = distributed;
        this.enableSnat = enableSnat;
        this.externalFixedIps = externalFixedIps;
        this.externalNetworkId = externalNetworkId;
        this.id = id;
        this.name = name;
        this.region = region;
        this.routerId = routerId;
        this.status = status;
        this.tags = tags;
        this.tenantId = tenantId;
    }

    public Optional<Boolean> adminStateUp() {
        return Optional.ofNullable(this.adminStateUp);
    }
    /**
     * @return The set of string tags applied on the router.
     * 
     */
    public List<String> allTags() {
        return this.allTags;
    }
    /**
     * @return The availability zone that is used to make router resources highly available.
     * 
     */
    public List<String> availabilityZoneHints() {
        return this.availabilityZoneHints;
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<Boolean> distributed() {
        return Optional.ofNullable(this.distributed);
    }
    /**
     * @return The value that points out if the Source NAT is enabled on the router.
     * 
     */
    public Boolean enableSnat() {
        return this.enableSnat;
    }
    /**
     * @return The external fixed IPs of the router.
     * 
     */
    public List<GetRouterExternalFixedIp> externalFixedIps() {
        return this.externalFixedIps;
    }
    /**
     * @return The network UUID of an external gateway for the router.
     * 
     */
    public String externalNetworkId() {
        return this.externalNetworkId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    public Optional<String> routerId() {
        return Optional.ofNullable(this.routerId);
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean adminStateUp;
        private List<String> allTags;
        private List<String> availabilityZoneHints;
        private @Nullable String description;
        private @Nullable Boolean distributed;
        private Boolean enableSnat;
        private List<GetRouterExternalFixedIp> externalFixedIps;
        private String externalNetworkId;
        private String id;
        private @Nullable String name;
        private @Nullable String region;
        private @Nullable String routerId;
        private @Nullable String status;
        private @Nullable List<String> tags;
        private @Nullable String tenantId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRouterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminStateUp = defaults.adminStateUp;
    	      this.allTags = defaults.allTags;
    	      this.availabilityZoneHints = defaults.availabilityZoneHints;
    	      this.description = defaults.description;
    	      this.distributed = defaults.distributed;
    	      this.enableSnat = defaults.enableSnat;
    	      this.externalFixedIps = defaults.externalFixedIps;
    	      this.externalNetworkId = defaults.externalNetworkId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.region = defaults.region;
    	      this.routerId = defaults.routerId;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.tenantId = defaults.tenantId;
        }

        public Builder adminStateUp(@Nullable Boolean adminStateUp) {
            this.adminStateUp = adminStateUp;
            return this;
        }
        public Builder allTags(List<String> allTags) {
            this.allTags = Objects.requireNonNull(allTags);
            return this;
        }
        public Builder allTags(String... allTags) {
            return allTags(List.of(allTags));
        }
        public Builder availabilityZoneHints(List<String> availabilityZoneHints) {
            this.availabilityZoneHints = Objects.requireNonNull(availabilityZoneHints);
            return this;
        }
        public Builder availabilityZoneHints(String... availabilityZoneHints) {
            return availabilityZoneHints(List.of(availabilityZoneHints));
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder distributed(@Nullable Boolean distributed) {
            this.distributed = distributed;
            return this;
        }
        public Builder enableSnat(Boolean enableSnat) {
            this.enableSnat = Objects.requireNonNull(enableSnat);
            return this;
        }
        public Builder externalFixedIps(List<GetRouterExternalFixedIp> externalFixedIps) {
            this.externalFixedIps = Objects.requireNonNull(externalFixedIps);
            return this;
        }
        public Builder externalFixedIps(GetRouterExternalFixedIp... externalFixedIps) {
            return externalFixedIps(List.of(externalFixedIps));
        }
        public Builder externalNetworkId(String externalNetworkId) {
            this.externalNetworkId = Objects.requireNonNull(externalNetworkId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        public Builder routerId(@Nullable String routerId) {
            this.routerId = routerId;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public Builder tags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public Builder tenantId(@Nullable String tenantId) {
            this.tenantId = tenantId;
            return this;
        }        public GetRouterResult build() {
            return new GetRouterResult(adminStateUp, allTags, availabilityZoneHints, description, distributed, enableSnat, externalFixedIps, externalNetworkId, id, name, region, routerId, status, tags, tenantId);
        }
    }
}
