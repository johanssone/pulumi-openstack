// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.networking.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSubnetIdsV2Result {
    private final @Nullable String cidr;
    private final @Nullable String description;
    private final @Nullable Boolean dhcpEnabled;
    private final @Nullable String gatewayIp;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> ids;
    private final @Nullable Integer ipVersion;
    private final @Nullable String ipv6AddressMode;
    private final String ipv6RaMode;
    private final @Nullable String name;
    private final @Nullable String nameRegex;
    private final @Nullable String networkId;
    private final String region;
    private final @Nullable String sortDirection;
    private final @Nullable String sortKey;
    private final @Nullable String subnetpoolId;
    private final @Nullable List<String> tags;
    private final @Nullable String tenantId;

    @CustomType.Constructor
    private GetSubnetIdsV2Result(
        @CustomType.Parameter("cidr") @Nullable String cidr,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("dhcpEnabled") @Nullable Boolean dhcpEnabled,
        @CustomType.Parameter("gatewayIp") @Nullable String gatewayIp,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("ipVersion") @Nullable Integer ipVersion,
        @CustomType.Parameter("ipv6AddressMode") @Nullable String ipv6AddressMode,
        @CustomType.Parameter("ipv6RaMode") String ipv6RaMode,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("nameRegex") @Nullable String nameRegex,
        @CustomType.Parameter("networkId") @Nullable String networkId,
        @CustomType.Parameter("region") String region,
        @CustomType.Parameter("sortDirection") @Nullable String sortDirection,
        @CustomType.Parameter("sortKey") @Nullable String sortKey,
        @CustomType.Parameter("subnetpoolId") @Nullable String subnetpoolId,
        @CustomType.Parameter("tags") @Nullable List<String> tags,
        @CustomType.Parameter("tenantId") @Nullable String tenantId) {
        this.cidr = cidr;
        this.description = description;
        this.dhcpEnabled = dhcpEnabled;
        this.gatewayIp = gatewayIp;
        this.id = id;
        this.ids = ids;
        this.ipVersion = ipVersion;
        this.ipv6AddressMode = ipv6AddressMode;
        this.ipv6RaMode = ipv6RaMode;
        this.name = name;
        this.nameRegex = nameRegex;
        this.networkId = networkId;
        this.region = region;
        this.sortDirection = sortDirection;
        this.sortKey = sortKey;
        this.subnetpoolId = subnetpoolId;
        this.tags = tags;
        this.tenantId = tenantId;
    }

    public Optional<String> cidr() {
        return Optional.ofNullable(this.cidr);
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<Boolean> dhcpEnabled() {
        return Optional.ofNullable(this.dhcpEnabled);
    }
    public Optional<String> gatewayIp() {
        return Optional.ofNullable(this.gatewayIp);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<Integer> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }
    public Optional<String> ipv6AddressMode() {
        return Optional.ofNullable(this.ipv6AddressMode);
    }
    public String ipv6RaMode() {
        return this.ipv6RaMode;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public Optional<String> networkId() {
        return Optional.ofNullable(this.networkId);
    }
    public String region() {
        return this.region;
    }
    public Optional<String> sortDirection() {
        return Optional.ofNullable(this.sortDirection);
    }
    public Optional<String> sortKey() {
        return Optional.ofNullable(this.sortKey);
    }
    public Optional<String> subnetpoolId() {
        return Optional.ofNullable(this.subnetpoolId);
    }
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubnetIdsV2Result defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String cidr;
        private @Nullable String description;
        private @Nullable Boolean dhcpEnabled;
        private @Nullable String gatewayIp;
        private String id;
        private List<String> ids;
        private @Nullable Integer ipVersion;
        private @Nullable String ipv6AddressMode;
        private String ipv6RaMode;
        private @Nullable String name;
        private @Nullable String nameRegex;
        private @Nullable String networkId;
        private String region;
        private @Nullable String sortDirection;
        private @Nullable String sortKey;
        private @Nullable String subnetpoolId;
        private @Nullable List<String> tags;
        private @Nullable String tenantId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSubnetIdsV2Result defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidr = defaults.cidr;
    	      this.description = defaults.description;
    	      this.dhcpEnabled = defaults.dhcpEnabled;
    	      this.gatewayIp = defaults.gatewayIp;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.ipVersion = defaults.ipVersion;
    	      this.ipv6AddressMode = defaults.ipv6AddressMode;
    	      this.ipv6RaMode = defaults.ipv6RaMode;
    	      this.name = defaults.name;
    	      this.nameRegex = defaults.nameRegex;
    	      this.networkId = defaults.networkId;
    	      this.region = defaults.region;
    	      this.sortDirection = defaults.sortDirection;
    	      this.sortKey = defaults.sortKey;
    	      this.subnetpoolId = defaults.subnetpoolId;
    	      this.tags = defaults.tags;
    	      this.tenantId = defaults.tenantId;
        }

        public Builder cidr(@Nullable String cidr) {
            this.cidr = cidr;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder dhcpEnabled(@Nullable Boolean dhcpEnabled) {
            this.dhcpEnabled = dhcpEnabled;
            return this;
        }
        public Builder gatewayIp(@Nullable String gatewayIp) {
            this.gatewayIp = gatewayIp;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder ipVersion(@Nullable Integer ipVersion) {
            this.ipVersion = ipVersion;
            return this;
        }
        public Builder ipv6AddressMode(@Nullable String ipv6AddressMode) {
            this.ipv6AddressMode = ipv6AddressMode;
            return this;
        }
        public Builder ipv6RaMode(String ipv6RaMode) {
            this.ipv6RaMode = Objects.requireNonNull(ipv6RaMode);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        public Builder networkId(@Nullable String networkId) {
            this.networkId = networkId;
            return this;
        }
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        public Builder sortDirection(@Nullable String sortDirection) {
            this.sortDirection = sortDirection;
            return this;
        }
        public Builder sortKey(@Nullable String sortKey) {
            this.sortKey = sortKey;
            return this;
        }
        public Builder subnetpoolId(@Nullable String subnetpoolId) {
            this.subnetpoolId = subnetpoolId;
            return this;
        }
        public Builder tags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public Builder tenantId(@Nullable String tenantId) {
            this.tenantId = tenantId;
            return this;
        }        public GetSubnetIdsV2Result build() {
            return new GetSubnetIdsV2Result(cidr, description, dhcpEnabled, gatewayIp, id, ids, ipVersion, ipv6AddressMode, ipv6RaMode, name, nameRegex, networkId, region, sortDirection, sortKey, subnetpoolId, tags, tenantId);
        }
    }
}
