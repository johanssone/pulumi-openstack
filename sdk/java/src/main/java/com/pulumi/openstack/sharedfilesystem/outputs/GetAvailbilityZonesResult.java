// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.sharedfilesystem.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAvailbilityZonesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The names of the availability zones, ordered alphanumerically.
     * 
     */
    private final List<String> names;
    /**
     * @return See Argument Reference above.
     * 
     */
    private final String region;

    @CustomType.Constructor
    private GetAvailbilityZonesResult(
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("names") List<String> names,
        @CustomType.Parameter("region") String region) {
        this.id = id;
        this.names = names;
        this.region = region;
    }

    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The names of the availability zones, ordered alphanumerically.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String region() {
        return this.region;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAvailbilityZonesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private List<String> names;
        private String region;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAvailbilityZonesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.names = defaults.names;
    	      this.region = defaults.region;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }        public GetAvailbilityZonesResult build() {
            return new GetAvailbilityZonesResult(id, names, region);
        }
    }
}
