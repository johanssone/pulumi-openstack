// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.openstack.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.openstack.compute.outputs.GetInstanceV2Network;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetInstanceV2Result {
    /**
     * @return The first IPv4 address assigned to this server.
     * 
     */
    private final String accessIpV4;
    /**
     * @return The first IPv6 address assigned to this server.
     * 
     */
    private final String accessIpV6;
    /**
     * @return The availability zone of this server.
     * 
     */
    private final String availabilityZone;
    /**
     * @return The flavor ID used to create the server.
     * 
     */
    private final String flavorId;
    /**
     * @return The flavor name used to create the server.
     * 
     */
    private final String flavorName;
    private final String id;
    /**
     * @return The image ID used to create the server.
     * 
     */
    private final String imageId;
    /**
     * @return The image name used to create the server.
     * 
     */
    private final String imageName;
    /**
     * @return The name of the key pair assigned to this server.
     * 
     */
    private final String keyPair;
    /**
     * @return A set of key/value pairs made available to the server.
     * 
     */
    private final Map<String,Object> metadata;
    /**
     * @return The name of the network
     * 
     */
    private final String name;
    /**
     * @return An array of maps, detailed below.
     * 
     */
    private final List<GetInstanceV2Network> networks;
    private final String powerState;
    private final String region;
    /**
     * @return An array of security group names associated with this server.
     * 
     */
    private final List<String> securityGroups;
    /**
     * @return A set of string tags assigned to this server.
     * 
     */
    private final List<String> tags;
    /**
     * @return The user data added when the server was created.
     * 
     */
    private final String userData;

    @CustomType.Constructor
    private GetInstanceV2Result(
        @CustomType.Parameter("accessIpV4") String accessIpV4,
        @CustomType.Parameter("accessIpV6") String accessIpV6,
        @CustomType.Parameter("availabilityZone") String availabilityZone,
        @CustomType.Parameter("flavorId") String flavorId,
        @CustomType.Parameter("flavorName") String flavorName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("imageId") String imageId,
        @CustomType.Parameter("imageName") String imageName,
        @CustomType.Parameter("keyPair") String keyPair,
        @CustomType.Parameter("metadata") Map<String,Object> metadata,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("networks") List<GetInstanceV2Network> networks,
        @CustomType.Parameter("powerState") String powerState,
        @CustomType.Parameter("region") String region,
        @CustomType.Parameter("securityGroups") List<String> securityGroups,
        @CustomType.Parameter("tags") List<String> tags,
        @CustomType.Parameter("userData") String userData) {
        this.accessIpV4 = accessIpV4;
        this.accessIpV6 = accessIpV6;
        this.availabilityZone = availabilityZone;
        this.flavorId = flavorId;
        this.flavorName = flavorName;
        this.id = id;
        this.imageId = imageId;
        this.imageName = imageName;
        this.keyPair = keyPair;
        this.metadata = metadata;
        this.name = name;
        this.networks = networks;
        this.powerState = powerState;
        this.region = region;
        this.securityGroups = securityGroups;
        this.tags = tags;
        this.userData = userData;
    }

    /**
     * @return The first IPv4 address assigned to this server.
     * 
     */
    public String accessIpV4() {
        return this.accessIpV4;
    }
    /**
     * @return The first IPv6 address assigned to this server.
     * 
     */
    public String accessIpV6() {
        return this.accessIpV6;
    }
    /**
     * @return The availability zone of this server.
     * 
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }
    /**
     * @return The flavor ID used to create the server.
     * 
     */
    public String flavorId() {
        return this.flavorId;
    }
    /**
     * @return The flavor name used to create the server.
     * 
     */
    public String flavorName() {
        return this.flavorName;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The image ID used to create the server.
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return The image name used to create the server.
     * 
     */
    public String imageName() {
        return this.imageName;
    }
    /**
     * @return The name of the key pair assigned to this server.
     * 
     */
    public String keyPair() {
        return this.keyPair;
    }
    /**
     * @return A set of key/value pairs made available to the server.
     * 
     */
    public Map<String,Object> metadata() {
        return this.metadata;
    }
    /**
     * @return The name of the network
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return An array of maps, detailed below.
     * 
     */
    public List<GetInstanceV2Network> networks() {
        return this.networks;
    }
    public String powerState() {
        return this.powerState;
    }
    public String region() {
        return this.region;
    }
    /**
     * @return An array of security group names associated with this server.
     * 
     */
    public List<String> securityGroups() {
        return this.securityGroups;
    }
    /**
     * @return A set of string tags assigned to this server.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return The user data added when the server was created.
     * 
     */
    public String userData() {
        return this.userData;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceV2Result defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accessIpV4;
        private String accessIpV6;
        private String availabilityZone;
        private String flavorId;
        private String flavorName;
        private String id;
        private String imageId;
        private String imageName;
        private String keyPair;
        private Map<String,Object> metadata;
        private String name;
        private List<GetInstanceV2Network> networks;
        private String powerState;
        private String region;
        private List<String> securityGroups;
        private List<String> tags;
        private String userData;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceV2Result defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessIpV4 = defaults.accessIpV4;
    	      this.accessIpV6 = defaults.accessIpV6;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.flavorId = defaults.flavorId;
    	      this.flavorName = defaults.flavorName;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.imageName = defaults.imageName;
    	      this.keyPair = defaults.keyPair;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
    	      this.networks = defaults.networks;
    	      this.powerState = defaults.powerState;
    	      this.region = defaults.region;
    	      this.securityGroups = defaults.securityGroups;
    	      this.tags = defaults.tags;
    	      this.userData = defaults.userData;
        }

        public Builder accessIpV4(String accessIpV4) {
            this.accessIpV4 = Objects.requireNonNull(accessIpV4);
            return this;
        }
        public Builder accessIpV6(String accessIpV6) {
            this.accessIpV6 = Objects.requireNonNull(accessIpV6);
            return this;
        }
        public Builder availabilityZone(String availabilityZone) {
            this.availabilityZone = Objects.requireNonNull(availabilityZone);
            return this;
        }
        public Builder flavorId(String flavorId) {
            this.flavorId = Objects.requireNonNull(flavorId);
            return this;
        }
        public Builder flavorName(String flavorName) {
            this.flavorName = Objects.requireNonNull(flavorName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder imageId(String imageId) {
            this.imageId = Objects.requireNonNull(imageId);
            return this;
        }
        public Builder imageName(String imageName) {
            this.imageName = Objects.requireNonNull(imageName);
            return this;
        }
        public Builder keyPair(String keyPair) {
            this.keyPair = Objects.requireNonNull(keyPair);
            return this;
        }
        public Builder metadata(Map<String,Object> metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder networks(List<GetInstanceV2Network> networks) {
            this.networks = Objects.requireNonNull(networks);
            return this;
        }
        public Builder networks(GetInstanceV2Network... networks) {
            return networks(List.of(networks));
        }
        public Builder powerState(String powerState) {
            this.powerState = Objects.requireNonNull(powerState);
            return this;
        }
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        public Builder securityGroups(List<String> securityGroups) {
            this.securityGroups = Objects.requireNonNull(securityGroups);
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public Builder userData(String userData) {
            this.userData = Objects.requireNonNull(userData);
            return this;
        }        public GetInstanceV2Result build() {
            return new GetInstanceV2Result(accessIpV4, accessIpV6, availabilityZone, flavorId, flavorName, id, imageId, imageName, keyPair, metadata, name, networks, powerState, region, securityGroups, tags, userData);
        }
    }
}
